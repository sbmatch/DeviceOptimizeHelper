name: Android CI

on:
  push:
    branches:
      - main
      - enterpriseModePolicyManager

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
      RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
          unzip commandlinetools-linux-7583922_latest.zip -d android-sdk
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv android-sdk/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
          sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;21.4.7075529"

      - name: Build APK
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - name: Sign APK with Keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_FILE }}" | base64 -d > keystore.jks
          ./gradlew signingConfigWriterRelease
          $ANDROID_HOME/build-tools/34.0.0/apksigner sign --ks keystore.jks --ks-key-alias ${{ secrets.RELEASE_KEY_ALIAS }} --ks-pass env:RELEASE_KEYSTORE_PASSWORD --key-pass env:RELEASE_KEY_PASSWORD --in app/build/outputs/apk/release/DeviceOptimizeHelper_v*.apk

      - name: Get versionName from Android app
        id: get_version
        run: |
          VERSION_NAME=$(grep -oP 'versionName "\K[^"]+' app/build.gradle)
          echo "Version Name: $VERSION_NAME"
          echo "tag_name=$VERSION_NAME" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/release/DeviceOptimizeHelper_v*.apk
          tag_name: "v${{ env.tag_name }}"
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
